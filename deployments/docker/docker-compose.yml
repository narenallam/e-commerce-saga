version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: saga-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - saga-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: order
    container_name: order-service
    ports:
      - "8000:8000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - ORDER_SERVICE_URL=http://order-service:8000
      - INVENTORY_SERVICE_URL=http://inventory-service:8001
      - PAYMENT_SERVICE_URL=http://payment-service:8002
      - SHIPPING_SERVICE_URL=http://shipping-service:8003
      - NOTIFICATION_SERVICE_URL=http://notification-service:8004
      - PORT=8000
    depends_on:
      - mongodb
    networks:
      - saga-network

  inventory-service:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: inventory
    container_name: inventory-service
    ports:
      - "8001:8001"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - PORT=8001
    depends_on:
      - mongodb
    networks:
      - saga-network

  payment-service:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: payment
    container_name: payment-service
    ports:
      - "8002:8002"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - PORT=8002
    depends_on:
      - mongodb
    networks:
      - saga-network

  shipping-service:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: shipping
    container_name: shipping-service
    ports:
      - "8003:8003"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - PORT=8003
    depends_on:
      - mongodb
    networks:
      - saga-network

  notification-service:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: notification
    container_name: notification-service
    ports:
      - "8004:8004"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - PORT=8004
    depends_on:
      - mongodb
    networks:
      - saga-network

  saga-coordinator:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        SERVICE_DIR: coordinator
    container_name: saga-coordinator
    ports:
      - "9000:9000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - MONGO_DB=ecommerce_saga
      - ORDER_SERVICE_URL=http://order-service:8000
      - INVENTORY_SERVICE_URL=http://inventory-service:8001
      - PAYMENT_SERVICE_URL=http://payment-service:8002
      - SHIPPING_SERVICE_URL=http://shipping-service:8003
      - NOTIFICATION_SERVICE_URL=http://notification-service:8004
      - PORT=9000
    depends_on:
      - mongodb
      - order-service
      - inventory-service
      - payment-service
      - shipping-service
      - notification-service
    networks:
      - saga-network

networks:
  saga-network:
    driver: bridge

volumes:
  mongo_data: 